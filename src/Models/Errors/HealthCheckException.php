<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Screenshothis\Screenshothis\Models\Errors;

use Screenshothis\Screenshothis\Models\Components;
use Screenshothis\Screenshothis\Utils;
/** HealthCheckException - Performs a comprehensive health check of all critical system components including database connectivity, storage availability, job queue status, and S3 functionality. Returns detailed status information for monitoring and alerting systems. */
class HealthCheckException
{
    /**
     * Overall health status of the system
     *
     * @var Components\Status $status
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status')]
    #[\Speakeasy\Serializer\Annotation\Type('\Screenshothis\Screenshothis\Models\Components\Status')]
    public Components\Status $status;

    /**
     * Timestamp of the health check
     *
     * @var string $timestamp
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('timestamp')]
    public string $timestamp;

    /**
     * Uptime of the service in seconds
     *
     * @var float $uptime
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('uptime')]
    public float $uptime;

    /**
     * Array of health check results
     *
     * @var array<Components\Check> $checks
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('checks')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\Screenshothis\Screenshothis\Models\Components\Check>')]
    public array $checks;

    /**
     * Application version or commit hash
     *
     * @var ?string $version
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('version')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $version = null;

    /**
     * Raw HTTP response; suitable for custom response parsing
     *
     * @var ?\Psr\Http\Message\ResponseInterface $rawResponse
     */
    #[\Speakeasy\Serializer\Annotation\Exclude]

    public ?\Psr\Http\Message\ResponseInterface $rawResponse = null;

    /**
     * @param  Components\Status  $status
     * @param  string  $timestamp
     * @param  float  $uptime
     * @param  array<Components\Check>  $checks
     * @param  ?string  $version
     * @param  ?\Psr\Http\Message\ResponseInterface  $rawResponse
     * @phpstan-pure
     */
    public function __construct(Components\Status $status, string $timestamp, float $uptime, array $checks, ?string $version = null, ?\Psr\Http\Message\ResponseInterface $rawResponse = null)
    {
        $this->status = $status;
        $this->timestamp = $timestamp;
        $this->uptime = $uptime;
        $this->checks = $checks;
        $this->version = $version;
        $this->rawResponse = $rawResponse;
    }

    public function toException(): HealthCheckExceptionThrowable
    {
        $serializer = Utils\JSON::createSerializer();
        $message = $serializer->serialize($this, 'json');
        $code = -1;

        return new HealthCheckExceptionThrowable($message, (int) $code, $this);
    }
}