<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Screenshothis\Screenshothis\Models\Errors;

use Screenshothis\Screenshothis\Utils;
/** InternalServerError - Internal server error */
class InternalServerError
{
    /**
     *
     * @var string $requestId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('requestId')]
    public string $requestId;

    /**
     *
     * @var string $message
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('message')]
    public string $message;

    /**
     *
     * @var string $code
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('code')]
    public string $code;

    /**
     * Raw HTTP response; suitable for custom response parsing
     *
     * @var ?\Psr\Http\Message\ResponseInterface $rawResponse
     */
    #[\Speakeasy\Serializer\Annotation\Exclude]

    public ?\Psr\Http\Message\ResponseInterface $rawResponse = null;

    /**
     * @param  string  $requestId
     * @param  string  $message
     * @param  string  $code
     * @param  ?\Psr\Http\Message\ResponseInterface  $rawResponse
     * @phpstan-pure
     */
    public function __construct(string $requestId, string $message, string $code, ?\Psr\Http\Message\ResponseInterface $rawResponse = null)
    {
        $this->requestId = $requestId;
        $this->message = $message;
        $this->code = $code;
        $this->rawResponse = $rawResponse;
    }

    public function toException(): InternalServerErrorThrowable
    {
        $serializer = Utils\JSON::createSerializer();
        $message = $serializer->serialize($this, 'json');
        $code = $this->code;

        return new InternalServerErrorThrowable($message, (int) $code, $this);
    }
}