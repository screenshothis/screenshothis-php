<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Screenshothis\Screenshothis\Models\Errors;

use Screenshothis\Screenshothis\Models\Operations;
use Screenshothis\Screenshothis\Utils;
/** NotAliveException - Service is not alive */
class NotAliveException
{
    /**
     *
     * @var Operations\StatusNotAlive $status
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status')]
    #[\Speakeasy\Serializer\Annotation\Type('\Screenshothis\Screenshothis\Models\Operations\StatusNotAlive')]
    public Operations\StatusNotAlive $status;

    /**
     *
     * @var string $timestamp
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('timestamp')]
    public string $timestamp;

    /**
     *
     * @var string $error
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('error')]
    public string $error;

    /**
     * Raw HTTP response; suitable for custom response parsing
     *
     * @var ?\Psr\Http\Message\ResponseInterface $rawResponse
     */
    #[\Speakeasy\Serializer\Annotation\Exclude]

    public ?\Psr\Http\Message\ResponseInterface $rawResponse = null;

    /**
     * @param  Operations\StatusNotAlive  $status
     * @param  string  $timestamp
     * @param  string  $error
     * @param  ?\Psr\Http\Message\ResponseInterface  $rawResponse
     * @phpstan-pure
     */
    public function __construct(Operations\StatusNotAlive $status, string $timestamp, string $error, ?\Psr\Http\Message\ResponseInterface $rawResponse = null)
    {
        $this->status = $status;
        $this->timestamp = $timestamp;
        $this->error = $error;
        $this->rawResponse = $rawResponse;
    }

    public function toException(): NotAliveExceptionThrowable
    {
        $serializer = Utils\JSON::createSerializer();
        $message = $serializer->serialize($this, 'json');
        $code = -1;

        return new NotAliveExceptionThrowable($message, (int) $code, $this);
    }
}